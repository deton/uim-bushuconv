uim-bushuconv
=============

uim-bushuconvは、複数の部首から漢字を合成する、部首合成変換を行うための
[uim](http://code.google.com/p/uim/)用IMです。

uim-tutcodeの対話的な部首合成変換機能を使っています。

特徴
----

* 複数の部首を指定することで、漢字候補の絞り込みが可能

    + "木"→「㒒㗚㭭㭷㮇㮈㮍㮤㮶㯃㯍㯰㰏䆿䈎䒳䯂休余來保傈傑...」(候補数859)
    + "木口"→「杏呆枴枷枸柷栝格桔桮梏梧椥莕㗚保枲架㭭枳柗桐...」(候補数98)
    + "木口イ"→「保堡葆褒褓」(候補数5)

* 漢字の一部を部首として使って合成可能

    入力された漢字を分解した部首の集合から合成可能な漢字を候補として表示します。

    + "菊浦"→「葡蒲薄礴莆匍蔛芍蒗薢葯莍萢藩澥粱菟瀟瀺角々籵范茫莎菏菠菹萍...」
    + "修月"→「脩滫儕肜佾侑俏偦散胕僩撒繖胗腋腑膨霰㑪偂膺膄膠徹㬚撤澈轍鬜...」

    部首の引き算をして合成される漢字も候補に表示します。

    + "陶阿"→「匋勹缶可」

* 漢字の合成に使う部首をクリップボードやセレクションやカーソル前から取得可能

    + 複数の部首をクリップボードからペーストして入力可能。
    + 複数の部首を含むセレクション文字列を取得して部首合成変換可能。
    + カーソル前の文字を取得して部首として使用可能。

    ペーストする/セレクション文字列として選択しておくのは、
    部首だけにする必要はなく、部首を含む漢字でOK。
    また、クリップボードやセレクションからの部首取得時に、
    UnicodeコードポイントのU+XXXXX表記があれば、対応する文字に置換します。

    例:「觴」を合成する部首として、「傷」を入力したいが、
    画数を数えて部首を選ぶのが面倒な場合、通常のIMで文字入力後に、
    以下の3種類の方法でuim-bushuconv側から取得可能。

    + uim-bushuconvに切り替え後に「角傷」の2文字をペースト。
    + エディタに「角傷」を入力・選択後にuim-bushuconvに切り替え。
    + エディタに「角傷」を入力後にuim-bushuconvに切り替えて、
      `<Control>r`を2回押してカーソル前の2文字を取得。

* カーソル前の文字のUnicodeコードポイントや漢字集合
  (jisx0208,jisx0213,jisx0212等)を表示する機能あり

* 画数ごとの部首リストから選択(部首の読み方がわからなくてもOK)

インストール
============

./install.sh

準備
====

uim-pref-gtkやuim-pref-qt4を起動し、
「全体設定」→「使用可能にする入力方式」を編集し、
"bushuconv"を有効にしてください。

キーボードを使ってbushuconv IMに切り替えるには、
「ホットキーによる入力方式の一時切り替えを有効にする」を
チェックしてください。

クリップボードから部首のペーストを行うには、
「TUT-Code キー設定1」→「クリップボードから貼り付け」キーに
`<Control>v`等を設定してください。

なお、クリップボードやセレクションやカーソル前の文字列の取得は、
uimのtext acquisition API(surrounding text API)に対応した
以下のブリッジでのみ動作します。

  * uim-gtk
  * uim-qt4
  * uim-qt3
  * MacUIM 0.6.15-1

使用方法
========

セレクション文字列から変換する場合の例
--------------------------------------

(a)テキストエディタ等の入力エリアで「サ科」を入力します。

(b)`<Shift>←`キー等を使って、「サ科」を選択します。

(c)uim-toolbarや「一時切り替えキー」を使って、bushuconv IM
(アイコン: ![アイコン](https://github.com/deton/uim-bushuconv/raw/master/pixmaps/bushuconv.png))
に切り替えます。

(d)漢字候補として、「萪莠菌萎萩蓁蘇蘓莉藊蔛穫薐...」が表示されます(候補数19)。

(e)漢字として、「萪」を確定(`a`キーを入力)。

部首を画数から選択する場合
--------------------------

uim-toolbarや「一時切り替えキー」を使って、bushuconv IM
(アイコン: ![アイコン](https://github.com/deton/uim-bushuconv/raw/master/pixmaps/bushuconv.png))
に切り替えます。

(1)最初に、部首の画数に対応するキーを入力してください。
画数ごとに部首を分けています。

![例0](http://deton.github.com/uim-bushuconv/bushuconv-top.png)

例1: 画数3の部首を選ぶため、`3`キーを入力。

最初に入力するキーと画数の対応は以下。

* 1-9  画数1-9の部首候補
* 0    画数10の部首候補
* q    画数11の部首候補
* w    画数12の部首候補
* e    画数13の部首候補
* r    画数14の部首候補
* t    画数15の部首候補
* y    画数16の部首候補
* u    画数17の部首候補
* i    画数18の部首候補
* o    画数19の部首候補
* p    画数19の部首候補他("3":「蟲」「毳」「橸」等、同じ部品を3つ含む漢字の合成用)

(2)次に、候補ウィンドウに表示されている、その画数の部首候補から、
目あての部首を選択するか、
候補ウィンドウ上で表示されているラベルキーを入力してください。

例2: 部首として、"艹"を選択(`2`キーを入力)。

![例2](http://deton.github.com/uim-bushuconv/bushuconv-3.png)

(3)そうすると、選択された部首を使って合成可能な漢字の候補が表示されます。

例3: 漢字候補として、「㺃䒳䒾䓔䔈䔍䔥䕃偀儆儚冪...」が表示されます(候補数659)。

![例3](http://deton.github.com/uim-bushuconv/bushuconv-32.png)

(4)最後に、候補ウィンドウに表示された中から漢字を選ぶと確定されます。

(5)なお、(3)の状態で、続けて新たな部首を入力((1)からの手順と同様)すると、
入力した全ての部首を使って合成可能な漢字の候補が表示されます。
つまり、部首を追加していくことで、漢字候補を絞り込むことができます。

例4: 画数5の部首を追加するため、`5`キーを入力。

![例4](http://deton.github.com/uim-bushuconv/bushuconv-325.png)

例5: 部首として、"禾"を選択(`3`キーを入力)。

例6: 漢字候補として、「莠菌萎萩萪蓁蘇蘓莉藊穫薐...」が表示されます(候補数18)。

![例6](http://deton.github.com/uim-bushuconv/bushuconv-3250.png)

例7: 漢字として、「萪」を確定(`g`キーを入力)。

(6)なお、新たに入力した部首を組み合わせると何も合成できない場合は、
その部首は部首リストに追加されません。

例8: 例6の状態で、`4` `4` と入力して、部首として"王"を選択しても、
"王"は部首リストに追加されず、"艹禾"を対象とした漢字候補が再表示されます。

部首の代替文字
==============

セレクション文字列やクリップボードからの貼り付けを行うため、
通常のIMで部首を入力する際、
"艹"(くさかんむり)等の部首は入力しにくいので、"サ"等の文字で代替可能です。

以下に代替文字の例を挙げます。
代替文字がある場合は、選択中の部首の
[註釈表示](#%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E9%A0%85%E7%9B%AE%E8%A8%BB%E9%87%88)
内の漢字候補の先頭あたりに表示されます。

+ 1丨
+ 4丩
+ 5丂
+ 、丶
+ え辶
+ し乀
+ へ𠆢
+ ア阝
+ イ亻(にんべん)
+ ウ宀
+ オ扌(てへん)
+ サ艹(くさかんむり)
+ シ氵(さんずい)
+ チ千
+ リ刂(りっとう)
+ ワ冖(わかんむり)
+ ン冫(にすい)

入力状態
========

以下の2つの入力状態があります。
各状態で、使用可能なキーが異なります。

* 部首画数選択状態(1)(例0画面) + 漢字選択状態(3)(4)(5)(例3、例6画面)

    「▼」のみや、「▼サ<u>=>茜</u>」のように、
    漢字候補が下線付きで`=>`の後に表示されている状態。

    + 部首画数を指定するキー:

            1 2 3 4 5  6 7 8 9 0
            q w e r t  y u i o p 

    + 漢字を選択するキー: 

            a s d f g  h j k l ;
            z x c v b  n m , . /
            Q W E R T  Y U I O P
            A S D F G  H J K L +
            Z X C V B  N M < > ?

* 部首選択状態(2)(例2、例4画面)

    「▼<u>3</u>」や「▼サ<u>5=>茜</u>」のように、
    直前に入力した部首画数を指定するキー(例:3や5)が
    下線付きで表示されている状態。

        1 2 3 4 5  6 7 8 9 0
        q w e r t  y u i o p
        a s d f g  h j k l ;
        z x c v b  n m , . /
        Q W E R T  Y U I O P
        A S D F G  H J K L +
        Z X C V B  N M < > ?
        ! " # $ %  & ' ( ) -
        ^ \ @ [ :  ] = ~ | `
        { * } _

キーと処理の対応
================

* `<Control>g`  デフォルトのIMに切り替える
* `tab`         変換前の部首を確定する
* `left`        変換前の部首をUnicodeコードポイント"U+xxxx"として確定する
* `right`       選択中の漢字候補を部首として使って、部首合成変換を行う
* `<Control>r`  カーソル前の文字を部首として取得する
  (押した回数に応じて取得位置が前に移動。例:2回目はカーソルの2個前の文字を取得)
* `<Control>s`  `<Control>r`で移動した文字取得位置の文字を再取得して、
  取得位置を後ろに移動する(押した回数に応じて取得位置が後ろに移動)
* `<Control>l`  `<Control>r`、`<Control>s`の文字取得位置をカーソル位置に戻す

なお、`<Control>r`や`<Control>s`によるカーソル前の文字の取得は、
[uimのtext acquisition APIに対応したブリッジ](#%E6%BA%96%E5%82%99)
でのみ動作します。

カーソル前の文字取得の動き
--------------------------

    二三四▼

上のように、"二三四"の後ろにカーソルがあるとき(▼は部首合成変換のマーカ)、

1. `<Control>r`を1回押すと"四"を部首として取得。
2. 2回目に押すと"三"を部首として取得
   (ただし、部首リスト"四三"で合成できる漢字が無いため"三"は削除されて、
   部首リストは"四"のまま)。
3. 3回目に押すと"二"を部首として取得(部首リストは"四二")。

`<Control>s`を使う例:

1. `<Control>r`を1回押すと"四"を部首として取得。
2. `<Control>s`を押すと、再度"四"を部首として取得。

カスタマイズ項目
================

* 漢字集合 (デフォルト: "JIS X 0213")
    + "JIS X 0213": JIS第3・第4水準(第1・第2水準(JIS X 0208)を含む)
    + "JIS X 0213 and 0212": JIS第3・第4水準とJIS補助漢字(と一部のUnicode)

    ただし、"JIS X 0213 and 0212"は、uim-1.8.2ではエラー発生。
    uim_look_look_internal()内のバッファサイズが4096バイトで、
    index2ファイルのそれ以上の長さの行がUTF-8文字の途中で切られるため。

    JIS X 0212やJIS X 0213の文字を使う場合は、該当文字が含まれるフォントを
    使わないと、文字が正しく表示されません(白い四角で表示されたりします)。
    (TrueTypeフォントの場合、VLゴシックではJIS X 0213に未対応文字多数。
    OpenTypeフォントPr6/Pr6N(Adobe-Japan1-6対応フォント)なら
    JIS X 0212にも対応しているはず)

* 漢字確定後にデフォルトIMに切り替えるかどうか (デフォルト: #t)
* uim-bushuconvへ切替時、セレクション文字列を使って部首合成変換するか (デフォルト: #t)
* uim-bushuconvへ切替時、カーソル前の文字の註釈情報を表示するか (デフォルト: #t)
* 部首1つの時にindex2ファイルのみ使用するかどうか (デフォルト: #f)

    遅いマシン用に、部首1つの時の漢字候補リストとして、
    index2ファイルを検索して得られたものだけを使います。
    ただし、部首に含まれる部品は漢字候補に含まれなくなります。

* カーソル前の最大何文字までを部首として取得するか (デフォルト: 10)

* bushu.helpファイル

    部首合成変換用ユーザ辞書(UTF-8)。
    このファイルの内容を優先して漢字候補に出します。
    部首2文字からの合成のみ記述可能です。
    (サンプルファイル: bushudict/bushu.help.sample)

    例:"猟"と"・"や、"独"と"鼠"で"獵"を合成したい場合、
    以下の行を追加してください。
    逆の順番("鼠"と"独")でも合成したい場合は、後ろに"*"を付けてください。

        獵猟・ 独鼠*

カスタマイズ項目(uim-tutcode)
-----------------------------
uim-tutcodeの対話的な部首合成変換機能を使っているので、
uim-tutcode側の設定が反映されます。

* 部首選択時の候補表示数:記号モードにおいて候補ウィンドウに一度に表示する候補数 (縦・横候補ウィンドウ時のデフォルト: 10)
* 部首から合成される漢字候補表示数:補完/予測において候補ウィンドウに一度に表示する候補数 (縦・横候補ウィンドウ時のデフォルト: 10)

カスタマイズ項目(註釈)
----------------------
註釈を有効にすると、選択中の漢字のUnicodeコードポイントや、
漢字集合(jisx0208,jisx0213-1,jisx0213-2,jisx0212等)を註釈として表示します。

ただし、表形式の候補ウィンドウは註釈表示に未対応です。

コマンドラインツール
====================

入力漢字コードがUTF-8でない場合(EUC-JP等)、以下のエラーが出ます。

    Error: scm_charcodec_read_char: invalid char sequence

この場合は、以下の例のように、
nkf -wやlv -Ou8やiconv -t utf-8等でUTF-8に変換した文字列を、
各コマンドラインツールに渡してください。

    $ cat readme.euc-jp | nkf -w | $PWD/tools/uimsh-ucs.scm

tools/uimsh-bushuconv.scm: 部首合成変換
---------------------------------------
* 入力: 部首リスト
* 出力: 合成される漢字の候補

入出力漢字コードはUTF-8。

実行例:

    $ echo '木刀' | $PWD/tools/uimsh-bushuconv.scm
    朷枌枴梛棻棼楔檞梁棃𥱋樑簗蔾
    $ echo '口木イ' | $PWD/tools/uimsh-bushuconv.scm
    保堡葆褒褓

tools/uimsh-kanjiset.scm: 漢字集合の判定
----------------------------------------
* 入力: 漢字リスト
* 出力: 漢字集合(jisx0208,jisx0213-1,jisx0213-2,jisx0212,ksc5601,gb2312,unicode,ascii)

入力漢字コードはUTF-8。

実行例:

    $ echo '休鷗匋褱閒强髙a' | $PWD/tools/uimsh-kanjiset.scm
    jisx0208 jisx0213-1 jisx0213-2 jisx0212 ksc5601 gb2312 unicode ascii

tools/uimsh-ucs.scm: UnicodeコードポイントのU+XXXXX表記の置換
-------------------------------------------------------------
* 入力: 文字列
* 出力: UnicodeコードポイントのU+XXXXX表記を対応する文字に置換した文字列

入出力漢字コードはUTF-8。

実行例:

    $ echo '例えば、U+8A3BU+91c8とか' | nkf -w | $PWD/tools/uimsh-ucs.scm
    例えば、註釈とか

tools/uimsh-rk.scm: ローマ字かな変換
------------------------------------
* 入力: ローマ字文字列
* 出力: かな文字列(EUC-JP)

出力漢字コードはEUC-JP。

オプション:

* -k, --katakana  カタカナで出力する。
* -n              "nna"を"んあ"でなく"んな"に変換する。

実行例:

    $ $PWD/tools/uimsh-rk.scm -n shinnyuu
    しんにゅう

BUGS
====

* uim-tutcodeの対話的な部首合成変換機能では、
  部首を2つ以上使って漢字を合成することが想定されているため、
  部首1つの場合に表示される漢字候補は少ない場合があります。
  特に、画数ごとの部首リストに出てこない漢字を
  部首としてペーストした場合(例:「微」に対し候補数7:「屼兀一儿山彳攵」)。
  この場合は、2つめの部首を指定すると漢字候補が増えることがあります
  (例:「微王」に対し候補数41:「徴懲澂尫珖皝玫徨尩玩玵珧瑞菫玲珩珮琛...」)。

* 漢字辞典の部首とは異なる場合があります。
  uim-bushuconvで使用している、
  [uim-tutcodeの対話的な部首合成変換機能](http://code.google.com/p/uim-doc-ja/wiki/UimTutcode#%E5%AF%BE%E8%A9%B1%E7%9A%84%E3%81%AA%E9%83%A8%E9%A6%96%E5%90%88%E6%88%90%E5%A4%89%E6%8F%9B)は、
  もともとEmacs用の漢字直接入力環境tc2で作られたものです。
  つまり、漢字直接入力方式のT-Code等で直接入力可能な漢字を部品として使って
  漢字を合成することを意図したものなので、
  漢字辞典の部首とは異なる場合があります。

* Unicodeの結合文字(例:U+30AB U+309A:カ゚)や
  IVS(例:U+908A U+E0107:邊󠄇)には未対応です。

* クリップボードから部首のリストをペーストした際や、
  セレクション文字列を部首のリストとして使う場合、
  部首のリストの途中で、その部首を組み合わせると何も合成できなくなる場合、
  以降の部首は無視されます
  (期待する動作は、その部首だけスキップ)。

    [`<Control>r`による部首取得](#%E3%82%AB%E3%83%BC%E3%82%BD%E3%83%AB%E5%89%8D%E3%81%AE%E6%96%87%E5%AD%97%E5%8F%96%E5%BE%97%E3%81%AE%E5%8B%95%E3%81%8D)
    を使えば、途中に無視される部首があっても次の部首を取得することが可能です。

* 補助漢字(JIS X 0212)(とUnicode少し)を含む部首合成変換辞書
  (bushu34h+.{index2,expand})は、(4096バイト以上の)長い行があるため、
  UTF-8文字の途中までしか読み込まれずエラーが発生します。

  なお、bushu34.index2でも、"口"を含む漢字のリストが長すぎるため、
  エラーが発生しないように、簡単に入力できそうな漢字は削ってあります。

* 漢字候補が多いと処理がかなり遅くなります("口"や"木"等)。
  ~/.uimに以下を追加するとsortを省略するので少し速くなります。

        (set! tutcode-bushu-sort! (lambda (seq less?) seq))

* 縦候補ウィンドウ上で最初から選択されている候補をクリックしても、
  確定されません。
  (選択済候補の再選択とみなされて、IM側に候補選択通知が来ないため。
  かといって、最初に何も選択しないようにすると、
  どの候補をクリックしても候補選択通知が来なくなるし)

参考
====

* [漢字検索](http://x0213.org/searchkanji/)

    部首名(例:「のぎへん」)、読み、総画数等を組み合わせて漢字の検索が可能なWebサイト。

* uim-chardict-qt4

* [tc-2.3.1-22.6](http://deton.github.com/uim-bushuconv/tc-2.3.1-22.6.tar.gz)

    http://gitatsu.hp.infoseek.co.jp/tcode/tc-2.3.1-22.6.tar.gz
    で公開されていたアーカイブのコピーを
    http://deton.github.com/uim-bushuconv/tc-2.3.1-22.6.tar.gz
    に置きました。

* 指定文字の情報(コードポイント等)の表示
    * EmacsのM-x describe-char
    * [FirefoxのCharacter Identifier addon](https://addons.mozilla.org/ja/firefox/addon/3929)
    * [Vimスクリプトgetjpcharset.vim](https://github.com/deton/getjpcharset.vim)

謝辞
====

各漢字を構成する部品(部首)を記述した部首合成変換辞書は、
tc-2.3.1-22.6に含まれるものを使わせてもらっています。
また、部首合成変換アルゴリズムもtc-2.3.1-22.6から移植したものです。
tc2を作成・メンテナンスされているtcode-mlの方々、
JIS X 0213, JIS X 0212対応の辞書bushu34h.revを作成された矢木さんに感謝します。

註釈の訓読み、音読み、意味のデータは、
http://unicode.org/Public/UNIDATA/Unihan.zip 内の
Unihan_Readings.txtを変換したものを使っています。

```
# Unihan_Readings.txt
# Date: 2011-08-08 22:10:53 GMT [JHJ]
# Unicode version: 6.1.0
#
# Unicode Character Database
# Copyright (c) 1991-2011 Unicode, Inc.
# For terms of use, see http://www.unicode.org/terms_of_use.html
```
